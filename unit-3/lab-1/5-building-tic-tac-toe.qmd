---
title: "Page 5: Building a Tic-Tac-Toe Board"
subtitle: "Unit 3, Lab 1, Page 5"
order: 5
---

::: learn
**In this project,** you will develop a program that
plays Tic-Tac-Toe as well as you do.

**On this first page,** you use <em>clones</em> to
display a Tic-Tac-Toe board and let two human players enter moves.

<img src="/img/3-lists/TTT1_img/Three States of TTT.png" title="Three states of Tic-Tac-Toe: in progress, win, tie" alt="Three states of Tic-Tac-Toe: in progress, win, tie" class="ms-4" width="550"/>
:::

The project is spread out over different units because there's a lot
to do, and because some steps require techniques you haven't learned
yet. On <em>this</em> page, you'll learn about <em>cloning</em> a sprite
(like copying it, only better). In the future, you'll extend the project
to detect wins and ties and, ultimately, to let the computer be one of
the players.

One approach to building this game is to use <em>multiple
sprites</em>; each square of the board is a separate sprite. Each sprite
knows where it is on the board, and, once positioned, the sprites never
move. The player clicks one of the nine squares, and that sprite changes
its costume to display the move.

::: {#first .forYouToDo}
<ol>

<li><a class="run" href="/prog/3-lists/U3L1-TicTacToe.xml" target="_blank"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file. Then save it to your Snap! account." class="inline"/></a></li>

<li>The first sprite has already been set up for you. It has three
costumes: Empty, X, and O. Click
<img src="/img/blocks/next-costume.png" title="next costume" alt="next costume" class="inline"/>
a few times to see all of them.<br />
<img src="/img/3-lists/TTT1_img/Costumes.png" title="Costumes of a square: Empty, X and O" alt="Costumes of a square: Empty, X and O" class="ms-4 noshadow" height="100"/></li>

</ol>
:::

You will use <em>clones</em> to create the 3×3 Tic-Tac-Toe
board.

::: vocabFullWidth
A **clone** is a copy of a sprite that <em>shares
information</em> with its parent sprite (the original sprite). For
example, clones have copies of any scripts from the parent, and if the
parent's script is changed, then the clones' scripts change too.
However, changes you make to a clone are <em>not</em> shared with the
parent, so you can do things like move each clone to a different
position.
:::



Clones start with the same position, costumes, and scripts of their
parent. But clones made by a program...

<ul>

<li><em>Don't</em> appear in the sprite corral.</li>

<li>Are <em>temporary</em>. Clicking the stop button or green flag will
delete all temporary clones in the project.</li>

</ul>



(There can also be permanent clones, which are created differently,
but they're not used in this project.)

::: endnote
In this project, you'll need <em>nine</em> clones, one for each square
of the Tic-Tac-Toe board. So, you'd need something like:<br />
<img src="/img/2-complexity/9-copies.png" title="repeat (9){create a clone of (myself)}" alt="repeat (9){create a clone of (myself)}" class="ms-4"/><br />
The actual code you write will be slightly more than this, but this is
the central idea. You'll need nine clones, and you will hide the parent.
This will allow you to control the squares of the grid with blocks
like:<br />
<img src="/img/blocks/when-i-start-as-clone.png" title="When I start as a clone" alt="When I start as a clone" class="ms-4"/>
:::

::: forYouToDo
<ol start="3">

<li>

Before clicking anything else, read this demonstration script with your
partner. Discuss what will happen when you click the sprite. <br />

::: sidenote
This script will help you learn about clones, but it won't be part of
your finished project.
:::

<img src="/img/3-lists/TTT1_img/WhenIamClicked.png" title="when I am (clicked){ create a clone of (myself); say(I&apos;m the parent.); glide (1) secs to x: (pick random(-200) to (200)) y: (pick random(-150) to (150)); say()}" alt="when I am (clicked){ create a clone of (myself); say(I&apos;m the parent.); glide (1) secs to x: (pick random(-200) to (200)) y: (pick random(-150) to (150)); say()}" class="ms-4" height="200"/><br />

</li>

<li>

Then click the sprite on the stage, and compare what happens with what
you expected.

::: narrower
<ul>

<li>Notice that the parent sprite (not the clone) moves to the new
random position after cloning itself. Look back at the code; why does
this make sense?</li>

<li>Note that <em>both</em> the clones and the parent <em>are
sprites</em>. Both are clickable (try it) and draggable (try that too).
This is different from the effect of the `stamp` Pen block,
which just leaves a picture of the sprite on the stage.</li>

<li>The `create a clone` block takes an input because it can
copy <em>any</em> sprite. In this project, there's only one sprite at
the beginning, so your choices are either <var>myself</var> or
<var>Square</var> (the sprite's name), which in this case, means the
same thing.</li>

</ul>
:::

</li>

<li>

Prepare to create your project:

<ol>

<li>Delete the `when I am clicked` demonstration script from
exercise 3.</li>

<li>Connect the `when` [⚑]{style="color:green"}
`clicked` block toward the bottom of the scripting area to
the script just below it.<br />
<img src="/img/3-lists/TTT1_img/make-board-script.png" title="makeBoard, set (X&apos;s turn?) to (true) [Comment: X plays first.]" alt="makeBoard, set (X&apos;s turn?) to (true) [Comment: X plays first.]" class="ms-4"/></li>

<li>

Read that script and notice...

::: narrower
<ul type="circle">

<li>The `makeBoard` block is empty. You'll write it in the
next problem.</li>

<li>

The variable <var>X's turn?</var> will be `true` when it's
X's turn to play or `false` when it's O's turn.

::: endnote
When alternating between two values, it's convenient to use Booleans
because you can use `not` to switch between them and you can
use `if` to <em>test</em> the variable. (Recall that
`if` requires a `true`/`false`
input.)<br />
<img src="/img/3-lists/TTT1_img/setXsturn.png" title="set (X&apos;s turn?) to (not (X&apos;s turn?))" alt="set (X&apos;s turn?) to (not (X&apos;s turn?))" class="ms-4" height="50"/>
<img src="/img/2-complexity/if-x-turn.png" title="if (X&apos;s turn?){}" alt="if (X&apos;s turn?){}" class="ms-4"/>
:::

</li>

</ul>
:::

</li>

</ol>

</li>

<li>

Edit the block `makeBoard` to set up nine clones in three
rows of three.<br />
<img src="/img/3-lists/TTT1_img/Row1.png" title="One row of squares" alt="One row of squares" class="ms-4" height="100"/>
<img src="/img/3-lists/TTT1_img/Row2.png" title="Two rows of squares" alt="Two rows of squares" height="100"/>
<img src="/img/3-lists/TTT1_img/Row3.png" title="Three rows of squares" alt="Three rows of squares" height="100"/><br />

::: narrower
Tips:

<ul>

<li>The costumes are all 50 steps tall and 50 steps wide.</li>

<li>Make sure the clones start out with the empty square costume.</li>

<li>Be sure to `show` the original sprite before cloning it,
so that the clones will be visible. After cloning nine times to create
the board, `hide` the original sprite so it does not
interfere with the game as a tenth square.</li>

<li>

<a href="#hint-for" data-bs-toggle="collapse" title="Click if you need an additional hint.">Click
if you need an additional hint about `makeBoard`.</a>

::: {#hint-for .collapse}
<img src="/img/3-lists/TTT1_img/for-row-column.png" title="for (row) = 1 to 3 {for (column) = 1 to 3 {} }" alt="for (row) = 1 to 3 {for (column) = 1 to 3 {} }" class="ms-4"/>
:::

</li>

</ul>
:::

</li>

<li>

Now finish up:

<ol>

<li>Write a `when I am clicked` script that will make each
clone wear the proper costume when clicked: X or O depending on whose
turn it is.</li>

<li>Decide how a square should behave when it is clicked while already
wearing an X or O costume.</li>

<li>Make the parent sprite <em>not</em>-draggable so that the clone
squares aren't accidentally moved around when the player clicks.<br />
<img src="/img/2-complexity/not-draggable.png" title="Draggable box un-checked" alt="Draggable box un-checked" class="ms-4"/></li>

</ol>

</li>

<li>Play one or two games of Tic-Tac-Toe with your partner, and fix any
bugs. Then, discuss what else you might want to add to the project.</li>

::: endnote
You can leave comments in the project file to remind yourself of
things you might want to do later.
:::

<img src="/img/icons/save-use-later.png" title="Save. You will use this later." alt="Save. You will use this later." class="inline"/>

</ol>
:::
