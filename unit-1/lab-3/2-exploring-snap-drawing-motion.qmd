---
title: "Page 2: Angles and Turning"
subtitle: "Unit 1, Lab 3, Page 2"
order: 2
gifffer: true
---

::: learn

**On this page,** you will learn about sprite turning angles, which are needed for drawing polygons. For starters, you'll draw various asterisks, like these: <br /> <img src="/img/1-introduction/Three-spokes.png" title="three spokes" alt="asterisk with three spokes" class="ms-4"/> <img src="/img/1-introduction/Five-spokes.png" title="asterisk with five spokes" alt="asterisk with five spokes"/> <img src="/img/1-introduction/Eight-spokes.png" title="asterisk with eight spokes" alt="asterisk with eight spokes"/>

:::

When you were trying to draw an equilateral triangle on the previous page, you might have tried code like this:<br /> <img src="/img/1-introduction/half-hex-code.png" title="repeat (3) {move (100) steps; turn right (60) degrees}" alt="repeat (3) {move (100) steps; turn right (60) degrees}" class="ms-4"/> and seen a result like this: <img src="/img/1-introduction/half-hex-pic.png" title="three sides of a regular hexagon" alt="three sides of a regular hexagon"/><br /> It's common to try this if you've learned that the angles in an equilateral triangle are all 60 degrees. However, the angle that the <em>sprite</em> needs to turn to make a triangle is actually 120 degrees, and it's important to understand why that is and how to find the correct angle for other polygons (five-sided, eleven-sided, etc.).

::: {#first .forYouToDo}

(@) <a href="/prog/1-introduction/U1L3-AngleExperiments1.xml" class="run"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file for the first set of experiments. Then save it to your Snap! account." class="inline"/></a>

(@) Perform the four experiments (A-D), and read the comments attached to each one. As you do, talk with your partner about what you see and why it happens.

(@) Then, experiment with the last script (shown right):<br /> <img src="/img/1-introduction/angles-and-turning.png" title="repeat (2): {move (100) steps, move (-100) steps, turn (180) degrees}" alt="repeat (2): {move (100) steps, move (-100) steps, turn (180) degrees}" class="float-end"/>
    a. Experiment with a <em>quarter</em> turn (`turn` 90 degrees instead of 180). Adjust the number of repetitions (the number you give to `repeat`) until you get the sprite to finish facing the same way it started.<br /> <img title="animation of drawing an asterisk with four spokes" alt="animation of drawing an asterisk with four spokes" class="ms-4" data-gifffer="/img/1-introduction/U1ImageVideoAddendum_img/U1L3P2-AngleExperiment-4.gif" height="150"/>
    b. Experiment with a <em>tenth</em> of a turn (`turn` 36 degrees). What input must you give to `repeat` to get the sprite to finish facing the same way it started?
    c. <em>Without trying it on the computer,</em> figure out what turning angle to use for a five-spoke asterisk. Make sure your partner agrees.
    d. Then, try the experiment.

(@) <img src="/img/icons/talk-with-your-partner.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/> Describe what you've learned about turning angles.

(@) At the top of the page you were thinking about triangles. As a step in that direction, make a three-spoke asterisk.

::: endnote
<a href="#hint-three-spoke" data-bs-toggle="collapse" title="Click for a hint about drawing a three-spoke asterisk.">Click for a hint.</a>

::: {#hint-three-spoke .collapse}
<img title="image of three spoke asterisk being drawn slowly with the sprite tracing out a different color in each third" alt="image of three spoke asterisk being drawn slowly with the sprite tracing out a different color in each third" class="ms-4" data-gifffer="/img/1-introduction/3-point-asterisk.gif"/>
:::
:::

</li>

</ol>
:::

::: takeNote
A 360° turn is a full turn. Half of that (180°) is a half turn. A fourth of 360° <img src="/img/1-introduction/360-divided-by-4-with-result-90.png" title="360-divided-by-4-with-result-90" alt="360-divided-by-4-with-result-90"/> is a quarter turn. You don't have to do the division yourself. Snap<em>!</em> can compute it for you. You can use <img src="/img/1-introduction/turn-360-divided-by-7-degrees.png" title="turn-360-divided-by-7-degrees" alt="turn-360-divided-by-7-degrees"/> or <img src="/img/1-introduction/turn-360-divided-by-3-degrees.png" title="turn-360-divided-by-3-degrees" alt="turn-360-divided-by-3-degrees"/> to get a seventh of a turn or a third of a turn.
:::

<img src="/img/icons/pair-programming-swap.png" title="Pair Programming Swap" alt="Pair Programming Swap" class="inline"/>

At the beginning of this page, you knew that to make a triangle you need 120° turns, but maybe you weren't sure why. Now you know why a <em>three-spoke asterisk</em> takes 120° turns, but what does that have to do with triangles?

::: forYouToDo
(@) Try different negative input values for the `move -100 steps` block (first -90, then -50, then -10), and do some of the turning experiments (above) with each value. Does this change the values needed for the `repeat` or `turn` blocks? These pictures are called "pinwheels."

(@) <a href="/prog/1-introduction/U1L3-AngleExperiments2.xml" class="run"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file for the second set of experiments. Then save it to your Snap! account." class="inline"/></a><br />Now, run script (A) in the file and experiment:

<ol class="ms-4">

<li>

Change the inputs in script A to draw an asterisk with:

<ol style="list-style-type:lower-roman;">

<li>5 branches</li>

<li>8 branches</li>

<li>3 branches</li>

</ol>

</li>

<li>

Make a copy of the three-branch script you built (right-click or control-click the script, and choose "duplicate").

<ol style="list-style-type:lower-roman;">

<li>In the copy, remove the `move -100 steps` block.</li>

<li>What does this new script do?</li>

</ol>

</li>

<li>

Make another copy of the three-branch script you built, and then:

<ol style="list-style-type:lower-roman;">

<li>Change it to a four-branch script.</li>

<li>Remove the `move -100 steps` block again.</li>

<li>What does this new script do?</li>

</ol>

</li>

</ol>

</li>

</ol>

(@) {{< checkpoint text='Fill out this Google Form' id='1FAIpQLSelXO0igT5BgO3N9ao9aWKXOIxD11tTKERWLtAJxVRSVedO2w' >}}

:::

::: takeNote
### Debugging with `say for`

You can use <img src="/img/2-complexity/Debugging/say-for-secs-block.png" title="say for" alt="say for" height="24px" class="inline"/> to get information about the state of your program while it's running.



<a href="#hint-say-for" data-bs-toggle="collapse" title="This animation shows how to use say for to determine the bug in  code that is supposed to draw a rectangle.">This animation</a> shows how to use `say for` to determine the bug in code that is supposed to draw a rectangle. Notice how `say for` makes the program pause and gives you information to help you identify the source of error.

::: {#hint-say-for .collapse}
<img title="Animation on how to use say for blocks for debugging an erroneous rectangle construction." alt="Animation on how to use say for blocks for debugging an erroneous rectangle construction." class="ms-4" data-gifffer="/img/2-complexity/Debugging/say-for-in-rectangle.gif"/>
:::


:::

```{=html}
<!--Commenting out for now. --MF, 9/2/19
<div class="forYouToDo">
<ol start="11">
<li>Fix the bug in the animation above.</li>
</ol>
</div>-->
```
::: ifTime
<ol start="5">

<li>

Script B in the same file shows how you can make a 60-branch script behave like the second hand of a clock. Try it out.\

<ul>

<li><img src="/img/icons/talk-with-your-partner-mini.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/>Be sure you are able to explain <em>how</em> this script does what it does.</li>

<li>Why is the change in pen color and size useful here?<br /> <img src="/img/1-introduction/turning-angle-clock.png" title="clear;repeat(60){set pen color to (black); set pensize to (1); move (100) steps; wait (1) secs; set pen color to (white); set pensize to (3); move (-100) steps; turn clockwise(360/60) degrees}" alt="clear;repeat(60){set pen color to (black); set pensize to (1); move (100) steps; wait (1) secs; set pen color to (white); set pensize to (3); move (-100) steps; turn clockwise(360/60) degrees}" class="ms-4"/></li>

</ul>

</li>

</ol>
:::

::: takeItTeaser
<img src="/img/1-introduction/alphie-small.png" title="art loosely inspired by Alma Thomas" alt="art loosely inspired by Alma Thomas"/>       <img src="/img/1-introduction/Thomas/Stage (19).png" title="art loosely inspired by Alma Thomas" alt="art loosely inspired by Alma Thomas"/>       <img src="/img/1-introduction/Thomas/Stage (16).png" title="art loosely inspired by Alma Thomas" alt="art loosely inspired by Alma Thomas"/>       <img src="/img/1-introduction/painted-small.png" title="art loosely inspired by Alma Thomas" alt="art loosely inspired by Alma Thomas"/>
:::

::: takeItTeased
<img src="/img/1-introduction/GraphicArt_img/alma-big.jpg" title="Alma Thomas painting" alt="Alma Thomas painting" class="float-end" height="200"/>

<ol type="A">

<li>

At the right is a painting by Alma Thomas. See what it inspires you to do.<br /> **It's your art. Take liberties.**

::: dialogue
<div>

Gamal: It looks like a map. Houses on the left, the town center on the right, with City Hall and the fire station and the mall.

</div>

<div>

Betsy: Maybe. To me the part on the left looks a little like a fingerprint, and the part on the right is clearly a person facing right, with her nose up against the right edge, halfway down.

</div>

<div>

Alphie: Never mind what it looks like. How are <em>we</em> going to make something that looks <em>like it?</em>

</div>

<div>

Betsy: Parts of it look like curved, thick dotted lines. We could do something like this:<br /> <img src="/img/1-introduction/betty-code.png" title="set color to (brown square); set pen size
to (10); set (flat line ends) to (True);
repeat (10) {pen down; move (15) steps; pen
up; move (5) steps; turn right (5) degrees}" alt="set color to (brown square); set pen size
to (10); set (flat line ends) to (True);
repeat (10) {pen down; move (15) steps; pen
up; move (5) steps; turn right (5) degrees}" class="ms-4"/>      <img src="/img/1-introduction/betty-line.png" title="sprite draws curved thick dotted line" alt="sprite draws curved thick dotted line"/><br /> But I'm not sure how to get a bunch of those to fit together.

</div>

<div>

Alphie: Randomness is your friend. Let's make a bunch of your lines, all different, and just point them in different directions.<br /> <img src="/img/1-introduction/alphie-dotted.png" title="dotted line definition: set pen color to
(brown square); set pen size to (10); set
(flat line ends) to (True); repeat (pick
random (8) to (20)): {pen down; move (pick
random (10) to (20)) steps; pen up; move (pick
random (1) to (8)) steps; turn right (pick
random (-10) to (20)) degrees}" alt="dotted line definition: set pen color to
(brown square); set pen size to (10); set
(flat line ends) to (True); repeat (pick
random (8) to (20)): {pen down; move (pick
random (10) to (20)) steps; pen up; move (pick
random (1) to (8)) steps; turn right (pick
random (-10) to (20)) degrees}" class="ms-4"/>   <img src="/img/1-introduction/alphie-lines.png" title="repeat (10): {dotted line; point towards
(center); turn right (pick random (-90) to
(90) degrees}" alt="repeat (10): {dotted line; point towards
(center); turn right (pick random (-90) to
(90) degrees}" class="ms-4"/>   <img src="/img/1-introduction/alphie-pic.png" title="picture of several connected irregular
dotted lines" alt="picture of several connected irregular
dotted lines" class="ms-4"/>

</div>

<div>

Betsy: Wow! That's very cool.

</div>

<div>

Alphie: Nothing like what it's supposed to look like, though.

</div>

<div>

Betsy: What do you mean, "supposed"? Go read the boldface line up above this blue box again.

</div>

<div>

Alphie: Yeah, I know, but "take liberties" doesn't mean "take whatever happens on your first try." I have another idea. We've been thinking of Thomas's picture as brown boxes on a white background, but it's actually more brown than white. What if we start with a brown background and draw white lines on it?

</div>

<div>

Gamal: What about that town center on the right?

</div>

<div>

Betsy: It's not a map. But to make you happy, when drawing white lines over toward the right, we can make them thicker, so the right part will have more white space than the left part.

</div>

<div>

Alphie: Uh oh... If you look carefully at the original picture, the brown boxes aren't all the same shade of brown.

</div>

<div>

Betsy: Alphie, you worry too much. But to make <em>you</em> happy, once we have the space divided into brown regions, we can <img src="/img/1-introduction/fill.png" title="fill" alt="fill"/> some of them in different colors.

</div>

<div>

Gamal: Hey! Gang! Remember we imported that crayon library? Guess what! There's a "World Map" library, too! And it makes "watercolor" maps like this:<br /> <img src="/img/1-introduction/water.png" title="vague map of a town" alt="vague map of a town" class="ms-4"/><br /> And then I went over every dot on the stage using <img src="/img/1-introduction/my-brightness.png" title="(brightness) at (myself)" alt="(brightness) at (myself)"/> and <img src="/img/1-introduction/my-hue.png" title="(hue) at (myself)" alt="(hue) at (myself)"/> to decide whether to make each dot white or brown:<br /> <img src="/img/1-introduction/painted.png" title="same vague map of a town but now in brown and white" alt="same vague map of a town but now in brown and white" class="ms-4"/>

</div>
:::

</li>

<li>What did Alma Thomas intend by her painting: a map, a fingerprint, or something else? Do some research.</li>

</ol>
:::

</body>

</html>
