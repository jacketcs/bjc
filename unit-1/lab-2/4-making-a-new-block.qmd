---
title: "Page 4: Making Your Own Block"
subtitle: "Unit 1, Lab 2, Page 4"
order: 4
gifffer: true
---

::: learn
<strong>On this page,</strong> you will create a new<img src="/img/1-introduction/gossip-response.png" title="gossip response" alt="gossip response" class="inline"/> block to make the program feel more like a conversation. <br /> <img src="/img/1-introduction/gossip2-reporting.png" title="gossip2 reporting &apos;Guess what. Gabrielle helped Señora&apos;" alt="gossip2 reporting &apos;Guess what. Gabrielle helped Señora&apos;" class="ms-4"/>
:::

::: {#first .forYouToDo}

(@) If it isn't open already, open your U1L2-Gossip project.

(@) Create the <img src="/img/1-introduction/gossip-response.png" title="gossip response" alt="gossip response" class="inline"/> block:

::: narrower
### <strong>Making a New Block</strong>

<ol type="a">

<img src="/img/1-introduction/make-a-block-labeled.png" title="image of &apos;Make a block&apos; dialog box with 10 palette menus (Motion, Looks, Pen, Sound, Lists, Control, Sensing, Operation, Variables, Other) labeled &apos;Choose a color (a palette)&apos;; a text box labeled &apos;Type a title for your block.&apos;; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) labeled &apos;Select a shape.&apos;; two radio boxes (for all sprites, which is checked, and for this sprite only, which is not checked) with no label; and two buttons (&apos;OK&apos; and &apos;Cancel&apos;) labeled &apos;Click OK.&apos;" alt="image of &apos;Make a block&apos; dialog box with 10 palette menus (Motion, Looks, Pen, Sound, Lists, Control, Sensing, Operation, Variables, Other) labeled &apos;Choose a color (a palette)&apos;; a text box labeled &apos;Type a title for your block.&apos;; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) labeled &apos;Select a shape.&apos;; two radio boxes (for all sprites, which is checked, and for this sprite only, which is not checked) with no label; and two buttons (&apos;OK&apos; and &apos;Cancel&apos;) labeled &apos;Click OK.&apos;" class="ms-4 noshadow"/>

<li>Create a new block by either clicking <img src="/img/1-introduction/make-a-block.png" title="make a block button" alt="make a block button" class="inline"/> near the end of the palette, clicking the <b>+</b> sign in the top right corner of the palette (shown below), or right-clicking (or control-clicking on a Mac) in an empty spot in the scripting area and choosing "make a block..." (shown below).<br /> <img src="/img/1-introduction/plus-sign.png" title="plus sign atop palette" alt="plus sign atop palette" class="ms-4"/> <img src="/img/1-introduction/make-a-block.jpg" title="make a block option" alt="make a block option" class="ms-4"/></li>

<li><strong>Choose the color</strong>, in this case red for Lists.</li>

<li><strong>Type the title</strong> for your block: `gossip response`.</li>

<li><strong>Select the shape and click OK.</strong> For this block, choose the oval <em>reporter</em> shape because you want it to <i>report</i> a value (the chosen response) to another block.</li>

</ol>

::: endnote
<p>Because you chose the reporter shape, the block editor opens with a <img src="/img/blocks/report.png" title="report" alt="report" class="inline py-0"/> block already attached to the hat block. Whatever input you give to `report` will become the value reported by your new block.</p>
:::

### <strong>Coding the Block's Script</strong>

<ol type="a" start="5">

<li><strong>Drag in the blocks you need.</strong> For your new block, use <img src="/img/1-introduction/list.png" title="the list block" alt="the list block"/> and <img src="/img/1-introduction/item.png" title="item(1) of ()" alt="item(1) of ()"/>. Use the value reported by `list` as an input to `item`.</li>

<li><strong>Snap the blocks together.</strong> The code's <em>structure</em> will be just like the code inside `who`, `does what`, and `who 2`. <!--<div class="sidenote">If you forget what's inside `who`, you can edit it and just leave the editor open for you to see as you work on your new block.  </div>--></li>

<li>

<strong>Fill all the inputs</strong>.

<ul>

<li>For this project, click the down-arrow in `item` to change "1" to "random".</li>

<li>Then fill `list` with phrases like "Guess what," "I heard," or "Who cares!"</li>

</ul>

</li>

<li><strong>Click OK</strong> when you're satisfied.</li>

</ol>
:::
:::

::: vocabFullWidth
: <strong>Procedures</strong>, <strong>Reporters</strong>, and <strong>Commands</strong>

A <strong>procedure</strong> is a named sequence of instructions that may take inputs and may report a value. Some languages call procedures <em>methods</em> or <em>functions</em>. Here are two types of procedures you have seen in Snap<em>!</em>:

- <strong>Reporters</strong> have an oval shape. They <em>report a value</em>.<br /> <img src="/img/blocks/pick-random-empty-full-size.png" title="pick random () to ()" alt="pick random () to ()" class="ms-4"/> <img src="/img/blocks/list-full-size.png" title="list ()" alt="list ()" class="ms-4"/> <img src="/img/1-introduction/plus.png" title="() + ()" alt="() + ()" class="ms-4"/>

- <strong>Commands</strong> have a jigsaw puzzle shape. They <em>tell the computer to do something</em> without reporting a value.<br /> <img src="/img/blocks/broadcast.png" title="broadcast ()" alt="broadcast ()" class="ms-4"/> <img src="/img/blocks/point-in-direction-blank.png" title="point in direction ()" alt="point in direction ()" class="ms-4"/> <img src="/img/blocks/say-empty-full-size.png" title="say ()" alt="say ()" class="ms-4"/>
:::

::: examFullWidth

- 
    The procedure <img src="/img/1-introduction/double-block-definition.png" title="PROCEDURE double (x)
    {
    RETURN (2 * x)
    }" alt="PROCEDURE double (x)
    {
    RETURN (2 * x)
    }" class="inline"/> would be written as

    <pre class="inline">PROCEDURE double(x)
    {
    RETURN(2 * x)
    }</pre>

    or <img src="/img/1-introduction/double-blocktran.png" title="PROCEDURE double(x)
    {
    RETURN(2 * x)
    }" alt="PROCEDURE double(x)
    {
    RETURN(2 * x)
    }"/>.

- Many languages (and the AP CS Principles Exam) use `return` instead of `report` as the name of the command to give a value back at the end of a function call.

- The exam uses "value of a procedure" to mean the value the procedure returns when called. For example, "the value of `double(5)`" means 10.

:::

## Debugging

::: forYouToDo

<img src="/img/icons/pair-programming-swap.png" title="Pair Programming Swap" alt="Pair Programming Swap" class="float-end"/>

(@) Test your custom `gossip response` block by clicking it several times. It should behave like the `who`, `does what`, and `who 2` blocks. Debug any problems before moving on.

::: sidenote
Review how to edit a block in <a href="/unit-1/lab-2/3-customizing.html" title="Customizing and Debugging">Unit 1 Lab 2 Page 2: Customizing and Debugging</a>, if needed.
:::

(@) Use your new block: Edit `gossip 2`, and insert `gossip response` in place of the text "Oh, but...."<br /> <img src="/img/1-introduction/gossip2-definition.png" title="gossip 2 {
report (join (gossip response) ( ) (who 2) ( ) (does what) ( ) (who) )
}" alt="gossip 2 {
report (join (gossip response) ( ) (who 2) ( ) (does what) ( ) (who) )
}" class="ms-4"/>

::: endnote
<p><a href="#hint-plus-signs" data-bs-toggle="collapse" title="Why do I see plus signs around gossip2 in Snap! but they're not in this picture?">Why do I see plus signs around `gossip 2` in Snap<em>!</em> but they're not in this picture?</a></p>

::: {#hint-plus-signs .collapse}
Normally, when you are using the Block Editor, you see plus signs because you have to click on them to add inputs to your blocks. But to show you the finished code here, it looks cleaner without the plus signs.
:::
:::

(@) Test and debug `gossip 2` also.

(@) Then test the whole program by clicking script D several times, and fix any bugs. <img src="/img/icons/save-mini.png" title="Save your work" alt="Save your work" class="inline py-0"/>

:::

</body>

</html>
