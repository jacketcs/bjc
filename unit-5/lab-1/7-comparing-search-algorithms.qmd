---
title: "Page 7: Removing Duplicates"
subtitle: "Unit 5, Lab 1, Page 7"
order: 7
---

::: learn
<p><strong>On this page,</strong> you will learn a recursive technique
to remove duplicates from a list.<br />
<img src="/img/5-algorithms/distinct-reporter-reporting.png" title="distinct items from (list (apples) (carrots) (bananas) (oranges) (bananas) (bread) (carrots)) repoting { apples, oranges, bananas, bread, carrots}" alt="distinct items from (list (apples) (carrots) (bananas) (oranges) (bananas) (bread) (carrots)) reporting { apples, oranges, bananas, bread, carrots}" class="ms-4"/></p>
:::

<p>Suppose you have a list of items and want to know if the elements of
the list are <em>distinct</em>. For example, you might want to make sure
that you don't have anything on your shopping list twice.</p>

<p>As a first step, we'll just answer the yes/no question: are there any
duplicates on your list?<br />
<img src="/img/5-algorithms/distinct-predicate-reporting.png" title="are the items of (list (apples) (carrots) (bananas) (oranges) (bananas) (bread) (carrots)) distinct? reporting false" alt="are the items of (list (apples) (carrots) (bananas) (oranges) (bananas) (bread) (carrots)) distinct? reporting false" class="ms-4"/></p>

::: {#first .forYouToDo}
<ol>

<li>Experiment with the
<img src="/img/blocks/all-but-first.png" title="all but first of &apos;list input slot&apos;" alt="all but first of &apos;list input slot&apos;" class="inline py-0"/>
block using a few different input lists.
<img src="/img/icons/talk-with-your-partner-mini.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/>
What does this block report?</li>

<li>

Finish building the `are the items distinct?` predicate,
which is started below. Since you're writing a predicate, your procedure
should always report `true` or `false`.<br />

::: sidenote
<a href="#hint-predicate" data-bs-toggle="collapse" title="Try doing it without this hint about the 'are the items distinct?' predicate">Try
doing it without this hint.</a>

::: {#hint-predicate .collapse}
If the program gets to the third `report` block at the
bottom, what does that tell you about the items in the list?
:::
:::

<img src="/img/5-algorithms/distinct-predicate-starter.png" title="are the items of (data) distinct?
{
if (is (data) empty?)
{
report ()
}
if ((all but first of (data)) contains ())
{
report ()
}
report (are the items of () distinct?)
}" alt="are the items of (data) distinct?
{
if (is (data) empty?)
{
report ()
}
if ((all but first of (data)) contains ())
{
report ()
}
report (are the items of () distinct?)
}" class="ms-4"/>\

::: endnote
Notice that this procedure calls itself at the end. (It is
<em>recursive.</em>) This won't work if the input to that call is the
same as the original input. So you can't say
<img src="/img/5-algorithms/report-are-items-of-data-distinct.png" title="report (are the items of (data) distinct?)" alt="report (are the items of (data) distinct?)" class="inline"/>.
Instead, you have to use a smaller input value.
:::

</li>

<li><img src="/img/icons/talk-with-your-partner.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/>
If you doubled the length of the list, would this algorithm take the
same amount of time? Twice as long? More than twice as long?</li>

</ol>
:::

<p>For your grocery list, you wouldn't just want to know whether or not
there are duplicates. You'd want a new list with the duplicates
removed.</p>

::: forYouToDo
<ol start="4">

<li>Experiment with the
<img src="/img/blocks/in-front-of-full-size.png" title="() in front of &apos;list input slot&apos;" alt="() in front of &apos;list input slot&apos;" class="inline py-0"/>
block using a few different inputs.
<img src="/img/icons/talk-with-your-partner-mini.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="inline"/>
What does this block report?</li>

<li>

Build a `distinct items from` reporter using a structure
similar to that of the `are the items distinct?` predicate.

::: endnote
<img src="/img/5-algorithms/distinct-reporter-starter.png" title="distinct items form (data)
{
if (is (data) empty?)
{
report ()
}
if ((all but first of (data)) contains ())
{
report ()
}
report ()
}" alt="distinct items form (data)
{
if (is (data) empty?)
{
report ()
}
if ((all but first of (data)) contains ())
{
report ()
}
report ()
}" class="float-end"/>

<p>The algorithm for this block will make the same decisions as in
`are the items distinct?`. But that was a predicate. This one
has to report a list. So look at the three `report` blocks in
your code for the `are the items distinct?` predicate, and
decide what they should report for the `distinct items from`
reporter.</p>

<p>

<a href="#hint-reporter" data-bs-toggle="collapse" title="Need another hint about the `distinct items from` reporter?">Need
another hint?</a>

::: {#hint-reporter .collapse}
<ul>

<li>If the list is empty, what should `distinct items from`
report?</li>

<li>

If the first item in the list appears in the rest of the list, it
doesn't matter which copy you leave out. Is there an easy way to get a
version of the list without one of those copies?

<ul>

<li>What if there are other duplicates in that list?</li>

</ul>

</li>

<li>If computer makes it to the third `report` block, what
does that tell you about the first item in the list? Do you want the
first item as part of the list you report?</li>

</ul>
:::

</p>

<p style="clear: both; height: 0px;">

</p>
:::

</li>

<li>Test it. Be sure to pick good test cases: More than one pair of
duplicates, more than two items of the same value, duplicates right next
to each other in the list, etc.</li>

<li>

::: saveAs
["U5L1-Removing-Duplicates"]{.text}<img src="/img/icons/save-this-as.png" title="Save your work as U5L1-Removing-Duplicates" alt="Save your work as U5L1-Removing-Duplicates"/>
:::

</li>

</ol>
:::
