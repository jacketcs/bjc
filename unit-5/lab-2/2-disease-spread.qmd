---
title: "Page 2: Disease Spread Project"
subtitle: "Unit 5, Lab 2, Page 2"
order: 2
gifffer: true
---



::: learn
**On this page,** you will model the spread of a disease
in a population.

<img title="Simulation of a disease spreading in a population.  A single infected individual eventually causes everyone to be infected." alt="Simulation of a disease spreading in a population.  A single infected individual eventually causes everyone to be infected." class="ms-4" data-gifffer="/img/5-algorithms/img_disease-spread/disease-spread.gif"/>

**Note:** There was a disease spread simulation in BJC
long before covid-19, but we want to acknowledge that right now the
spread of a disease isn't an abstract question. Everyone has been
affected by isolation at home, and some students may have lost loved
ones to this disease. Medical researchers do use simulations (much more
complex than this one) to try to predict the future course of the
disease.
:::

Suppose you are a medical researcher and would like to understand the
factors that contribute to the spread of disease. In particular, you
want to know the effect of population size on the time it takes for
everyone to be infected, under the simplifying assumption that once
infected, a person stays infected.

::: {#first .forYouToDo}
<ol>

<li><img src="/img/icons/talk-with-your-partner.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="float-end"/>
What would be a sensible hypothesis on how population size affects the
elapsed time?</li>

<li>What if the people interacted with one and other more
frequently?</li>

</ol>
:::

You may not have enough data to test your hypothesis, and it would be
unethical to induce the disease in a population just to gather new data.
A simulation would allow you to test your hypotheses without the
constraints of time, cost, and ethics.

::: {#second .forYouToDo}
<ol start="3">

<li>

<a href="/prog/5-algorithms/U5L2-Simulation.xml" class="run"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file. Then save it to your Snap! account." class="inline"/></a><br />
It includes:

<ul>

<li>a <var>population</var> variable that stores the total number of
people (represented by clones of a sprite)</li>

<li>a <var>percent initially infected</var> variable that stores the
fraction of the population who are sick at the beginning of the
simulation</li>

<li>a <var>speed</var> variable that stores the pace at which the clones
move</li>

<li>a <var>sprites ready?</var> variable that stores a Boolean that
keeps track of whether or not all the clones have been created and the
simulation can begin</li>

<li>a <var>number infected</var> variable that keep track of how many
clones are currently infected</li>

<li>an <var>infected?</var> <em>sprite-local</em> variable that stores a
Boolean that keeps track of whether or not a clone is sick (each clone
will have its own separate variable with that name)</li>

<li>two costumes, sick
(<img src="/img/5-algorithms/img_disease-spread/sick.png" title="&apos;sick&apos; sprite costume: a small red person" alt="&apos;sick&apos; sprite costume: a small red person" class="inline" height="40"/>)
and well
(<img src="/img/5-algorithms/img_disease-spread/well.png" title="&apos;well&apos; sprite costume: a small blue person" alt="&apos;well&apos; sprite costume: a small blue person" class="inline" height="40"/>),
that display the status of each clone</li>

<li>

::: sidenoteBig
You learned how to clone a sprite in
<a href="/unit-3/lab-1/5-building-tic-tac-toe.html" title="Unit 3 Lab 1 Page 5: Building a Tic-Tac-Toe Board">Unit
3 Lab 1 Page 5: Building a Tic-Tac-Toe Board</a>.

The primitive block
<img src="/img/blocks/my-neighbors.png" title="my (neighbors)" alt="my (neighbors)" class="inline"/>
reports a list of sprites that are near the sprite that uses it.
:::

a `simulate disease` function **for you to
complete** that takes three inputs: total population, percent
initially infected, and sprite speed; creates the clones that enact the
simulation; and outputs the time until the entire population is infected

</li>

<li>an `initialize simulation` block that initializes the
global variables and sets the parent sprite costume</li>

<li>a `touching infected person?` predicate **for you
to complete** that checks whether the current clone is being
exposed to the disease</li>

<li>an `initialize clone` block that decides whether a clone
will start out sick and positions it randomly on the stage</li>

<li>a `when I start as a clone` script **for you to
complete** that moves the clones until they are all infected</li>

</ul>

</li>

<li>Complete the `simulate disease` function, the
`touching infected person?` predicate, and the `when I
start as clone` script.</li>

<li><img src="/img/icons/talk-with-your-partner.png" title="Talk with Your Partner" alt="Talk with Your Partner" class="float-end"/>
Discuss how your simulation is similar to and different from a real-life
disease outbreak. Identify the <em>simplifying assumptions</em> you made
in this simulation.</li>

</ol>
:::

You want to know the effect of population size on the time elapsed.
Because there is some randomness in the simulation, you are going to get
some variation in the reported time. (This isn't a bug; in real life,
random events affect the elapsed time.)

::: forYouToDo
<ol start="6">

<li>

::: ap-standard
AAP-3.F.8
:::

Write a function that takes population size as input, runs the
simulation ten times, keeps the percent initially infected at 10 and the
speed of infection at 2, and reports the average time elapsed.<br />
<img src="/img/5-algorithms/average-of-disease-spread.png" title="average time for disease spread with population size: ()" alt="average time for disease spread with population size: ()" class="ms-4"/>

</li>

::: ap-standard
AAP-3.F.7
:::

::: sidenoteBig
Using clones is a form of parallelism. But as you learned on the
<a href="/unit-5/lab-1/8-sequential.html" title="Unit 5 Lab 1 Page 8: Parallelism">Unit
5 Lab 1 Page 8: Parallelism</a>, because the clones are all running on
one processor, cloning doesn't give you any speedup.
:::

<li>Call this function four times with different populations (50, 100,
150, and 200), and write down the results. Create a refined hypothesis
about the relationship between population size and time for the entire
population to be infected.</li>

<li>In real disease scenarios, not everyone ends up getting sick. How
would you decide if the simplifications you used in a simulation
invalidate the conclusions you might draw?</li>

</ol>
:::

This is a simplified model. There are many things you could do to
make the model more realistic. For example, you could make the infected
people get better over time or some people could be immune to the
disease, but you will always have to make some simplifications.

::: takeItFurther
<ol type="A">

<li>Now conduct a similar experiment holding population size constant
and varying the percent initially infected. Come up with a hypothesis
for this relationship.</li>

<li>Then conduct an other experiment by varying movement speed and
keeping population size and percent initially infected constant, and
create a third hypothesis.</li>

<li>Add some more inputs to the simulation block. We've suggested people
getting better after time or getting healed by doctors, but there are
many more you could think of.</li>

<li>You have hypotheses for changing only one variable, but what if you
change two things? Do they affect the result independently, or is there
a cross effect (for example, if sick people heal quickly, does that
change the relationship between population size and time elapsed)? Run
experiments to find out.</li>

<li>Design and implement a predator-prey simulation in Snap<em>!</em>.
For example, you could model an environment with wolf and deer
populations where the wolf prey on the deer. What are some parameters
you need to incorporate into your model so you can simulate realistic
fluctuations in the populations of predator and prey?</li>

<li>

Imagine you work at a bank that wants to minimize customer wait times in
line. The bank is considering two alternatives:

<ul>

<li>a single line where the customers stand in arrival order and wait
for the next available teller, or</li>

<li>separate lines for each teller.</li>

</ul>

Design and implement two simulations in Snap<em>!</em> to help the bank
determine the <em>average wait time</em> for customers in each scenario
in order to choose the best option.<br />
<img src="/img/5-algorithms/img_disease-spread/single-queue.png" title="Single queue" alt="Single queue" class="ms-4" height="180"/><img src="/img/5-algorithms/img_disease-spread/multiple-queues.png" title="Multiple queues" alt="Multiple queues" height="180"/>

</li>

<li>Do some research: Why do (most) banks use a single teller line, but
(most) grocery stores use a line per checkout station?</li>

</ol>
:::
