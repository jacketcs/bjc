---
title: "Mastermind"
subtitle: "Unit 2 Optional Project"
pagetitle: "{{< meta title >}} | {{< var title-fix >}}"
order: 3
---

::: todo
If I'm not misunderstanding these instructions, I think it's confusing
to have the students play with two sequences at once (which I've never
seen before) and then build the project with only one sequence at a time
(except for the TIF?). I think it should be one at a time in the "on
paper" example too. --MF
:::

::: todo
PG: This has the same potential as TTT to be a multistage (year long)
project. I'd elevate it, provided that a good /learning/ goal is
clarified.

BH: What a great project! We should finish it with the computer
guessing.

MF: I want to revise this page to reduce the text wall and to make
the rest of the page look more like the rest of our content.
:::

::: learn
**In this project,** you will begin to build the game
Mastermind™. In this game, one player selects a sequence of four secret
colors, and the other player tries to guess it.<br />
<img src="/img/1-introduction/mm-snapshot.png" title="Snapshot of game" alt="Snapshot of game" class="ms-4" width="250"/>
:::

::: {#first .forYouToDo}
<ol>

<li><a class="run" href="/prog/2-complexity/U2-Mastermind.xml"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file. Then save it to your Snap! account." class="inline"/></a><br />Look
at the scripts. There are six sprites, four for the player's guess and
two for the feedback to the guesser.</li>

::: narrower


**Feedback to the guesser** is two numbers (as shown in
each row of the game in the image above):

<ul>

<li>How many colors are in the <em>correct</em> positions? (The goal is
to have all four correct.)</li>

<li>How many correct colors are in <em>incorrect</em> positions?</li>

</ul>



```{=html}
<!--This is not included in the code. --MF
The first, "correct position," sprite has two short scripts: one to be used at the beginning of the game, and the other to be used when a guess is made.-->
```
:::

<li>Play a game of Mastermind with your partner <em>on paper</em>.</li>

::: narrower
<h4>**Mastermind Rules**</h4>

<ul>

<li>

**Each player should write down a sequence of four colors**
without letting your partner see it.

<ul>

<li>For convenience, you can use the first letter of each color name to
represent that color: **<u>r</u>**ed,
**<u>o</u>**range, **<u>y</u>**ellow,
**<u>g</u>**reen, **<u>b</u>**lue,
**<u>v</u>**iolet. (For now, don't use the same color more
than once, though people also play that way.)</li>

</ul>

</li>

<li>

**Take turns guessing your partner's colors**. When your
partner makes a guess, give two numbers as feedback as described above.

<ul>

<li>For example, if your secret colors are **royg** and
your partner guesses** goby** you reply "one and two,"
because one color (orange) is in the correct position, and two colors
(yellow and green) are in the secret sequence but not in the correct
positions.</li>

</ul>

</li>

<li>

**Use the information you have from earlier guesses** to
make the best guesses you can.

<ul>

<li>For example, after **goby** in the example above, you
might think, "One of my colors is in the correct position, and two other
colors are correct. I'm going to guess that green is in the correct
position, and orange and blue are somewhere in the list. So a good next
guess would be **grob** because that has green in the same
place as before, and orange and blue moved over." Your partner will
reply "zero and three," which sounds like negative progress because now
none are in the correct place, but it isn't because now you know for
sure that green wasn't the correct-position color, so on your next guess
you might try orange in the second position, and so on.</li>

</ul>

</li>

</ul>
:::

<li>

You'll build the Mastermind program in stages over the course of the
year. Now your goal is to support two human players using the computer
as a notepad to record guesses and feedback:

<ul>

<li>Find out the two players' names so you can use them to keep track of
whose turn it is.</li>

<li>Ask one player to make a guess (using four letters like
**goby** above).<br />
<img src="/img/2-complexity/mm1.png" title="first guess interaction" alt="first guess interaction" class="ms-4 noshadow"/></li>

<li>Display that guess on the screen.<br />
<img src="/img/2-complexity/mm2.png" title="four colors displayed" alt="four colors displayed" class="ms-4 noshadow"/></li>

<li>Ask the other player for feedback, as two numbers.<br />
<img src="/img/2-complexity/mm3.png" title="asking interaction" alt="asking interaction" class="ms-4 noshadow"/>
<img src="/img/2-complexity/mm4.png" title="four colors 2 points" alt="four colors 2 points" class="ms-4 noshadow"/></li>

<li>Keep doing that until the guesser gets the correct answer.</li>

</ul>

::: endnote
You'll find it useful for a script to be able to tell a particular
sprite what to do. There's a tool to do that: the
<img src="/img/1-introduction/tell.png" title="tell (sprite) to (action)" alt="tell (sprite) to (action)"/>
block. For example:<br />
<img src="/img/1-introduction/tell-alonzo.png" title="tell (Alonzo) to (say ...)" alt="tell (Alonzo) to (say ...)" class="ms-4"/>
<img src="/img/1-introduction/tell-correct.png" title="tell (correct position) to (show value (# correct))" alt="tell (correct position) to (show value (# correct))" class="ms-4"/>
:::

</li>

</ol>
:::

::: takeItFurther
<ol type="A">

<li>Instead of asking the guesser to type in four letters, you could
have six color buttons that the guesser could click in order. To do
this, make six more sprites, each with a color, and put them off on the
side of the stage so they won't be confused with the recorded guesses.
You should also have an "erase" sprite with this character as its
costume: ⌫ and an "okay" sprite, maybe with a check mark: ✓. Make sure
that these buttons update the display appropriately.</li>

<li>Let both players have secret color sequences, and take turns
guessing each other's list. You'll have to add a second column of
guesses toward the right side of the stage, and a second set of sprites.
The game ends when either player guesses correctly.</li>

</ol>
:::
