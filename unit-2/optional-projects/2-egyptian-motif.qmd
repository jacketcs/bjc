---
title: "Egyptian Motif"
subtitle: "Unit , Lab , Page 2"
order: 2
---

::: todo
<p>Need to rebuild images with plain prototype labels. --MF, 9/26/18</p>
:::

::: todo
<p>PG: Islamic art is a great candidate for computer drawing, and the
samples in TiF B seem like good ones. I'd prefer to have some good
/real/ illustrations. I don't see how the top stuff (everything before
TiF B) is Egyptian. Feels like another bow to "some culture" without
being genuine. But the project is pretty, so can we give it a learning
purpose?</p>

<p>BH: The obvious way to draw the picture in the pink box is as a
decorated hexagon.</p>

<p>MF: I want to revise this page. Some suggestions added to the
page.</p>
:::

::: learn
<img src="/img/2-complexity/EgyptianMotif_img/HexalDesign1.png" title="Hexagonal Design" alt="Hexagonal Design" class="indent" height="250"/>
<img src="/img/2-complexity/EgyptianMotif_img/HexaDesign2.png" title="Hexagonal Design in color" alt="Hexagonal Design in color" height="250"/>

<p>Much Islamic art applies principles of geometry and repeats simple
patterns to form complex forms. For example, the Egyptian Motif above
has six overlapping rectangles.</p>

<p><strong>In this project,</strong> you will learn how to extend your
<code>pinwheel</code> code from Unit 1 to create such intricate
patterns.</p>
:::

::: {#first .forYouToDo}
<ol>

::: todo
<p>Why are we giving them the code for these blocks instead of asking
that they build and/or import them? I suggest cutting #1 and #2 and
merging the first part of #3 into the pink box (I like the #3 images
better than those in the pink box anyway). The work starts halfway
through problem #3. <strong>I want to revise this page</strong>, but for
now I just moved #10 from a solo FYTD into the ITIT box. --MF,
9/26/18</p>
:::

<li>

In this project, you will repeatedly use rectangles, so first recall how
to create a <code>rectangle</code> block. <br />
<img src="/img/2-complexity/EgyptianMotif_img/rectangleCode.png" title="rectangle, width:(width) length:(length){pen down; repeat(2){move(width) steps; turn clockwise (90) degrees; move(length) steps; turn clockwise (90) degrees};pen up}" alt="rectangle, width:(width) length:(length){pen down; repeat(2){move(width) steps; turn clockwise (90) degrees; move(length) steps; turn clockwise (90) degrees};pen up}" class="indent" height="275"/>

::: endnote
Note the use of <code>pen down</code> and <code>pen up</code> blocks
inside the rectangle definition. We don't normally do this but here this
is done to simplify the more complex code coming ahead. This will ensure
that once a rectangle is drawn, the pen is up and you don't need to
worry about unintended scribbles as your drawing sprite continues moving
to execute the rest of the code.
:::

</li>

<li>Also recall the <code>pinwheel</code> code you have written in Unit
1.<br />
<img src="/img/2-complexity/EgyptianMotif_img/pinwheelCode.png" title="pinwheel, branches:(number of branches) size:(size) backup:(backup){repeat(number of branches){move(size) steps; move(-1Xbackup) steps; turn clockwise(360/number of branches) degrees}}" alt="pinwheel, branches:(number of branches) size:(size) backup:(backup){repeat(number of branches){move(size) steps; move(-1Xbackup) steps; turn clockwise(360/number of branches) degrees}}" class="indent" height="225"/></li>

<li>In this project, you will replace the <em><strong>pinwheel
branches</strong></em> with <em><strong>rectangles</strong></em> as
shown below. Note use of color is optional and is used here for
clarity.<br />
<img src="/img/2-complexity/EgyptianMotif_img/multiColorPinwheel.png" title="Multicolored pinwheel" alt="Multicolored pinwheel" class="indent" height="250"/>
<img src="/img/2-complexity/EgyptianMotif_img/multiColorPinwheelwithRectangles.png" title="Multicolored pinwheel with rectangles" alt="Multicolored pinwheel with rectangles" height="250"/>
<br /> Now create a <code>pinwheel with rectangles</code> block. It will
have two more inputs <var>width</var> and <var>length</var> for the
width and length of the rectangles.<br />
<img src="/img/2-complexity/EgyptianMotif_img/pinwheelWithRectanglesCodeHeader.png" title="pinwheel with rectangles, branches:(number of branches) size:(size) backup:(backup) width:(width) length:(length)" alt="pinwheel with rectangles, branches:(number of branches) size:(size) backup:(backup) width:(width) length:(length)" class="indent" height="100"/><br />
Its code will be identical to the <code>pinwheel</code> code except that
it has the <code>rectangle</code> block inserted in between the two
<code>move</code> blocks that created the pinwheel branches. <br />
<img src="/img/2-complexity/EgyptianMotif_img/rectangleInBetween.png" title="move(size) steps; rectangle, width:(width) length:(length); move(-1Xbackup) steps" alt="move(size) steps; rectangle, width:(width) length:(length); move(-1Xbackup) steps" class="indent" height="175"/><br /></li>

<li>Now, use the "Variables" menu to make variables that will allow you
to vary all aspects of the designs you create and do not forget to
initialize these variables right after the <code>when green flag
clicked</code> block<br />
<img src="/img/2-complexity/EgyptianMotif_img/makeVariables.png" title="Make variables: length, width, backup, size, number of branches" alt="Make variables: length, width, backup, size, number of branches" class="indent" height="175"/><img src="/img/2-complexity/EgyptianMotif_img/initializeVariables.png" title="Initialize variables" alt="Initialize variables" height="175"/></li>

<li>

You can turn these variables to alterable sliders by right-clicking on
the variable icon that is shown on stage and choosing the "slider"
option. And then you can set the minimum and maximum values of a slider
as shown.<br />
<img src="/img/2-complexity/EgyptianMotif_img/turnToSlider.png" title="Turn variables to sliders" alt="Turn variables to sliders" height="150"/><img src="/img/2-complexity/EgyptianMotif_img/sliderMax.png" title="Slider maximum" alt="Slider maximum" height="150"/><img src="/img/2-complexity/EgyptianMotif_img/setSliderMax.png" title="Setting slider maximum" alt="Setting slider maximum" height="150"/><br />
The following should be reasonable values for the minimum and maximum of
each variable:<br />

::: sidenote
You can change these minimum and maximum values as you generate and
explore new designs.
:::

+--------------------+---------+---------+
| Variable           | Minimum | Maximum |
+:==================:+=========+=========+
| number of branches | 3       | 36      |
+--------------------+---------+---------+
| size               | 0       | 100     |
+--------------------+---------+---------+
| backup             | 0       | 100     |
+--------------------+---------+---------+
| width              | 0       | 150     |
+--------------------+---------+---------+
| length             | 0       | 150     |
+--------------------+---------+---------+

</li>

<li>Click on the animation below to see an example of how you can use
the slider functionality in Snap<em>!</em> to generate and explore a
vast number of variations of your designs. <br />
<img title="Slider Animation Demo" alt="Slider Animation Demo" class="indent" data-gifffer="/img/2-complexity/EgyptianMotif_img/sliderAnimationDemo.gif" height="400"/></li>

<li>

Your code needs to make sure that the computer is always on the watch in
case any of the variables are changed by the user via the sliders. You
can do so with a <code>forever</code> block.<br />
<img src="/img/2-complexity/EgyptianMotif_img/foreverLoop2.png" title="forever{warp{clear; pinwheel with rectangles, branches:(number of branches) size:(size) backup:(backup) width:(width) length:(length) }}" alt="forever{warp{clear; pinwheel with rectangles, branches:(number of branches) size:(size) backup:(backup) width:(width) length:(length) }}" class="indent" height="175"/>

::: endnote
The <code>warp</code> block makes sure that the <code>pinwheel with
rectangles</code> is drawn all at once rather than step by step.
:::

</li>

<li>Once the code is written check to make sure everything works as
intended. You may need to position your drawing spite appropriately to
make best use of the stage you have. Now move each of your sliders to
generate and explore a vast variety of designs inspired by Islamic
art.</li>

::: endnote
Use these buttons to maximize your stage to give enough room for your
sliders.<br />
<img src="/img/2-complexity/EgyptianMotif_img/stagemaximize.png" title="Stage maximizing buttons" alt="Stage maximizing buttons" class="indent" height="50"/>
:::

</ol>
:::

::: ifTime
<ol start="9">

<li>Add color to your rectangles by inserting
<img src="/img/2-complexity/EgyptianMotif_img/setColor.png" title="set pen color to (red)" alt="set pen color to (red)" height="40"/>
into the start of the <code>warp</code> block in the forever loop and
inserting<img src="/img/2-complexity/EgyptianMotif_img/changeColor.png" title="change pen color by (10)" alt="change pen color by (10)" height="40"/>
into the <code>pinwheel with rectangles</code> code.</li>

<li>

Take screenshots of your creations and share with the class. Put them on
a class web page if you have one. Below are some examples of the types
of variations you can generate.<br />

::: sidenote
You may want to
<img src="/img/2-complexity/EgyptianMotif_img/hide.png" title="hide" alt="hide" height="30"/>
the drawing Sprite (Arrow) before taking the screenshots of your
designs.
:::

<img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignA.png" title="Multi-Color Design A" alt="Multi-Color Design A" height="175"/>
<img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignB.png" title="Multi-Color Design B" alt="Multi-Color Design B" height="175"/><img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignC.png" title="Multi-Color Design C" alt="Multi-Color Design C" height="175"/><br />
<img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignD.png" title="Multi-Color Design D" alt="Multi-Color Design D" height="175"/><img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignE.png" title="Multi-Color Design E" alt="Multi-Color Design E" height="175"/><img src="/img/2-complexity/EgyptianMotif_img/multiColorDesignF.png" title="Multi-Color Design F" alt="Multi-Color Design F" height="175"/>

</li>

</ol>
:::

::: takeItFurther
<ol type="A">

<li>Repeat all the steps of this project but, instead of using
rectangles, use other polygons.<br />
<img src="/img/2-complexity/EgyptianMotif_img/TrianglePinwheel.png" title="Triangle Pinwheel" alt="Triangle Pinwheel" height="200"/>
<img src="/img/2-complexity/EgyptianMotif_img/HexagonPinwheel.png" title="Hexagonal Pinwheel" alt="Hexagonal Pinwheel" height="200"/><img src="/img/2-complexity/EgyptianMotif_img/DodecaPinwheel.png" title="Dodecagonal Pinwheel" alt="Dodecagonal Pinwheel" height="200"/></li>

<li>Read more about Islamic art and find other patterns that would lend
themselves to explorations by programming.<br />
<img src="/img/2-complexity/EgyptianMotif_img/islamicpattern1.jpg" title="Islamic pattern 1" alt="Islamic pattern 1" height="300"/>
<img src="/img/2-complexity/EgyptianMotif_img/islamicpattern2.png" title="Islamic pattern 2" alt="Islamic pattern 2" height="300"/></li>

</ol>
:::
