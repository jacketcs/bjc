---
title: "Modeling Language: Plurals, Part 1"
subtitle: "Unit 2 Optional Project"
pagetitle: "{{< meta title >}} | {{< var title-fix >}}"
order: 4
---

::: todo
<p>PG: This /has/ a learning purpose. It's lost in "optional." The
learning purpose is couched in machine generation of language, but the
content/programming goals are also practice of old, learning new, and
foreshadowing. The important "new" is the essential element of problem
decomposition and abstraction: this problem is too difficult /without/
decomposing it, but perfectly tractable /with/ decomposition. And then,
perfectly extensible to Spanish or...</p>

<p>Brian and Mary are considering possibly one day making these two
pages into a non optional lab before or after Lab 4. --MF, 1/2/21</p>
:::

::: learn
Siri and other robots are programmed to generate language. Siri speaks;
some robots write. You have developed a program, <code>gossip</code>,
that writes. <b>In this project,</b> you will extend the computer's
abilities with language by developing a reporter block,
<code>plural</code>, that takes a noun as input and correctly spells and
outputs the plural <br />
<img src="/img/2-complexity/plural-day-with-result.png" title="plural (day) reporting (days)" alt="plural (day) reporting (days)" class="ms-4"/>
<img src="/img/2-complexity/plural-boss-with-result.png" title="plural (boss) reporting (bosses)" alt="plural (boss) reporting (bosses)"/>
<br /> Spelling a plural can seem almost automatic for a person, but it
is not simple: a computer needs an algorithm to do that task.
:::

::: {#first .forYouToDo}
::: sidenote
This project uses blocks already loaded for you from Snap<em>!</em>'s
"Words, sentences" library. You can load a library from the
Snap<em>!</em> File menu
<img src="/img/1-introduction/file_button.png" title="Snap! File menu button" alt="Snap! File menu button" style="height:1.6em;"/>
under "Libraries...".
:::

<ol>

<li>To do this project, you will need to use the new blocks
<img src="/img/2-complexity/last-letter-of-169x27.png" title="last letter of ()" alt="last letter of ()"/>,
and
<img src="/img/2-complexity/all-but-last-letter-of-231x27 pixels.png" title="all but last letter of ()" alt="all but last letter of ()"/>.
You will also need
<img src="/img/2-complexity/(list-of-items)-contains-(some-item)-predicate.png" title="(list () () () ()) contains ()" alt="(list () () () ()) contains ()"/>
and
<img src="/img/2-complexity/join-117x27.png" title="join () ()" alt="join () ()"/>,
which you used in Unit 1 Lab 2, Gossip and Greet.<br />
<a class="run" href="/prog/2-complexity/U2-plural.xml"><img src="/img/icons/load-save.png" title="Click here to load this file. Then save it to your Snap! account." alt="Click here to load this file. Then save it to your Snap! account." class="inline"/></a><br />
Try all its expressions (the nine one-line scripts) and experiment with
their inputs until you are sure you understand what they do. For each
expression, say what that script does <em>in general</em> not just what
it does with this particular input. (Example:
<img src="/img/2-complexity/last-letter-of-butterfly-with-result-y.png" title="last letter of (butterfly) reporting &apos;y&apos;" alt="last letter of (butterfly) reporting &apos;y&apos;"/>
reports "y", but you want to say what <code>last letter of</code> will
report if, say, "2017" is its input.)</li>

::: endnote
You won't need
<img src="/img/2-complexity/join-t-all-but-first-letter-of-when-343x33.png" title="join (t) (all but first letter of (when))" alt="join (t) (all but first letter of (when))" style="height:2.6em;"/>
for the project, but you might find it interesting to try it not only
with "when," as an input but with "where," "what," "wherefore."
Linguists use evidence like this to understand the history of a
language.
:::

::: sidenote
Choose the <em>reporter</em> button when you make
<code>plural</code>.<br />
<img src="/img/building-blocks/make-a-reporter.png" title="Image of &apos;Make a block&apos; dialog box with the &apos;Operators&apos; palette selected and the &apos;Reporter&apos; block shape selected. The palette has 10 menus (Motion, Looks, Sound, Pen, Lists, Control, Sensing, Operators, Variables, Other); a text box; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) labeled &apos;Select a shape.&apos;; two radio boxes (&apos;for all sprites&apos;, which is checked, and &apos;for this sprite only&apos;, which is not checked); and two buttons (OK and Cancel)." alt="Image of &apos;Make a block&apos; dialog box with the &apos;Operators&apos; palette selected and the &apos;Reporter&apos; block shape selected. The palette has 10 menus (Motion, Looks, Sound, Pen, Lists, Control, Sensing, Operators, Variables, Other); a text box; three block shape options (puzzle-shaped/&apos;Command&apos;, oval/&apos;Reporter&apos;, and hexagonal/&apos;Predicate&apos;) labeled &apos;Select a shape.&apos;; two radio boxes (&apos;for all sprites&apos;, which is checked, and &apos;for this sprite only&apos;, which is not checked); and two buttons (OK and Cancel)."/>
:::

<li>Here's one way to start building the <code>plural</code> block.
Build this much and test it out on at least "day" and "boss" and
"medicine," to make sure it works correctly for those. If it does not,
edit and fix it. <br />
<img src="/img/2-complexity/plural-(script).png" title="plural (word) {
if (s = last letter of (word)) {
report (join (word) (&apos;two letters: es&apos;))
}
report (join (word) (&apos;one letters: s&apos;))
}" alt="plural (word) {
if (s = last letter of (word)) {
report (join (word) (&apos;two letters: es&apos;))
}
report (join (word) (&apos;one letters: s&apos;))
}" class="ms-4"/></li>

<li><strong>Debugging: </strong> Try to find words for which this
version of <code>plural</code> does <em>not</em> work correctly. List
the words you find. <em>Organize that list</em>, sorting the words into
categories according to their last letter. For example, it will get
wrong some words that end with the letter "h". Try to find many words it
gets wrong.</li>

<li>

<strong><em>Save your list.</em></strong>

<ol>

<li>Create a Snap<em>!</em> list like this
<img src="/img/2-complexity/noun-list-for-testing-plural2.png" title="a list block containing: day, boss, moth, box, butterfly, brush... (the end of the image is cut off)" alt="a list block containing: day, boss, moth, box, butterfly, brush... (the end of the image is cut off)"/>
containing <em>all</em> of your test words (successful or
otherwise).</li>

<li>

::: saveAs
["U2-Plural"]{.text}<img src="/img/icons/save-this-as.png" title="save your work as U2-Plural" alt="save your work as U2-Plural"/>
<em>Save your file</em>. You will need this list.
:::

</li>

</ol>

</li>

<li>Your <code>plural</code> block should now work correctly for "day"
and "boss" and "moth," but it probably doesn't yet work correctly for
the word "box":<br />
<img src="/img/2-complexity/plural-box-with-(wrong)-result.png" title="suffix s box (with wrong result)" alt="suffix s box (with wrong result)" class="ms-4"/><br />
Edit your <code>plural</code> block to make it work for words that end
with "x". <em>Test</em> it to make sure it does work properly.
<img src="/img/icons/save-mini.png" title="Save your work" alt="Save your work" class="inline"/></li>

</ol>
:::

<p>You can do the same for conjugating verbs in Spanish or some other
language you choose. See the Take It Further section at the bottom.</p>

<p>The next two steps are worth learning---very useful for
<em>testing</em> <code>plural</code> and in more advanced work later
on---but not essential for <em>building</em> <code>plural</code>.</p>

::: forYouToDo
<ol start="6">

<li>Use <code>map</code> to test <em>all</em> the words on your list.
Leave the slot in <code>plural</code> <em>empty</em>, as you see here.
The <code>map</code> block inserts each element of the list into that
slot and reports a list of the results.<br />
<img src="/img/2-complexity/map-plural-over-list-of-nouns.png" title="map (plural ( )) over &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" alt="map (plural ( )) over &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" class="ms-4"/><br />
For now, don't worry about the words it still gets wrong, as long as it
works for "day," "boss," "moth," and "box."</li>

<li>In your <code>map</code> script, replace <code>plural</code>
with<img src="/img/2-complexity/join-()-y.png" title="join () (y)" alt="join () (y)"/>.
Try it. Now explain what the <code>map</code> block does, <em>in
general</em>.</li>

<li>Experiment with<br />
<img src="/img/2-complexity/keep-items-such-that-(last-letter-of-(input)-equals-h)-from-test-list.png" title="keep items (last letter of &apos;empty input slot&apos; = h) from &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" alt="keep items (last letter of &apos;empty input slot&apos; = h) from &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" class="ms-4"/><br />
and<br />
<img src="/img/2-complexity/keep-items-such-that-(last-letter-of-(input)-equals-y)-from-test-list.png" title="keep items (last letter of &apos;empty input slot&apos; = y) from &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" alt="keep items (last letter of &apos;empty input slot&apos; = y) from &apos;a list block containing: day, boss, moth, box, butterfly, brush...&apos; (the end of the image is cut off)" class="ms-4"/><br />
to see what they do. Again, leave the slot in <code>last letter
of</code> <em>empty</em>, as you see here. That is the placeholder for
<code>keep</code> to test each word the list. Explain what the
<code>keep</code> block does.</li>

</ol>
:::

::: takeItFurther
<ol type="A">

<li>If you know another language, build a block that takes a pronoun and
verb as input and outputs the correct form of that verb. For
example:<br />
<img src="/img/2-complexity/conjugate-verb-(spanish)-for-nosotros-comer.png" title="conjugate verb (Spanish), pronoun: (nosotros) verb: (comer) reporting &apos;comemos&apos;" alt="conjugate verb (Spanish), pronoun: (nosotros) verb: (comer) reporting &apos;comemos&apos;" class="ms-4"/>
<img src="/img/2-complexity/conjugate-verb-(spanish)-for-yo-tocar.png" title="conjugate verb (Spanish), pronoun: (yo) verb: (tocar) reporting &apos;toco&apos;" alt="conjugate verb (Spanish), pronoun: (yo) verb: (tocar) reporting &apos;toco&apos;" class="ms-4"/></li>

</ol>
:::
